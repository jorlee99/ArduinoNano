//set your pin locations#define S0#define S1#define S2#define S3#define s_Out int freq = 0;int red_freq = 0;int blue_freq = 0;int green_freq = 0;int odd_freq = 0;//freq scalings: L,L = off ; L,H = 2%; H,L = 20%; H,H = 100%;void setup() {      pinmode (S0, OUTPUT);    pinmode (S1, OUTPUT);    pinmode (S2, OUTPUT);    pinmode (S3, OUTPUT);    pinmode (s_Out, INPUT);        //20% scaling    digitalWrite(S0,HIGH)    digitalWrite(S1,LOW)        serial.begin(9600);}void loop() {    //Reading red objects    digitalWrite(S2,LOW);    digitalWrite(S3,LOW);        //reading the output frequency    frequency = pulseIn(s_Out, LOW);        //changes it to more realistic values    frequency = map(frequency, 20,80, 255,0)        red_freq = frequency;        //monitoring value    Serial.print(frequency);    Serial.print(" ");        delay(100);        //Reading blue objects    digitalWrite(S2,LOW);    digitalWrite(S3,HIGH);        //reading the output frequency    frequency = pulseIn(s_Out, LOW);        //changes it to more realistic values    frequency = map(frequency, 20,80, 255,0)        blue_freq = frequency;        //monitoring value    Serial.print(frequency);    Serial.print(" ");        delay(100);        //Reading green objects    digitalWrite(S2,HIGH);    digitalWrite(S3,HIGH);        //reading the output frequency    frequency = pulseIn(s_Out, LOW);        //changes it to more realistic values    frequency = map(frequency, 20,80, 255,0);        green_freq = frequency;        //monitoring value    Serial.print(frequency);    Serial.println(" ");            delay(100);        //Reading other objects (remove if it's only rgb)    digitalWrite(S2,HIGH);    digitalWrite(S3,HIGH);        //reading the output frequency    frequency = pulseIn(s_Out, LOW);        //changes it to more realistic values    frequency = map(frequency, 20,80, 255,0)        odd_freq = frequency;        delay(100);        /* for when you actually need this data do something    // you prob need to calibrate the if statements but should work ok with these for rgb        if ((red_freq > (green_freq+30)) & (red_freq > (blue_freq+30)))    //red colour    {        case 0:    //pick up item etc    {              }        break;              }            else if((blue_freq > (green_freq+30)) & (blue_freq > (red_freq+30)))    //blue colour    {        case 1:    //pick up item etc    {              }    break;            }            else if((green_freq > (red_freq+30)) & (green_freq > (blue_freq+30)))     //this is the one most likely to break so you might need to adjust values accordingly    {          case 2:     //pick up item etc     {                   }    break;     }        else     //just needs to be there for if statement    {    }            */}